meaning TODO
============
- how to avoid hard-coding parse logic?
  - connect commands to abstract commands (=, ==)
  - connect commands to dynamic commands (new words, etc.)
  - var keywords = {
      "is":"=",   // but how would this know if this is a question?
    }
- complex meanings (combinations of previously-learned definitions) >and
  - iterate through meanings for query output
  - check if we know the meanings to all newly attached meanings 
- parse "what (something else here) is __?"
  - "roots" approach f-m-l (first-middle-last)
  - stack keeps track of f-m-l matches?
  - pattern = ["what", "is", "{1}", "?"];
- relative weights of importance of individual tokens
  - based on how many tokens are present in phrase
    - i.e. 3 words (all "important") ... 10 words (only some are "important")
    
- categorization of ideas/subjects

- take away hard codings of parsed tokens
- abstract out parse function

- add context to meaning
  - >when

- important words:
  is
  